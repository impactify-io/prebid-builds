{"version":3,"file":"domainOverrideToRootDomain.js","mappings":";;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASA,0BAA0BA,CAACC,OAAO,EAAEC,UAAU,EAAE;EAC9D,OAAO,YAAW;IAChB,MAAMC,cAAc,GAAGC,QAAQ,CAACC,MAAM,CAACC,KAAK,CAAC,GAAG,CAAC;IACjD,MAAMC,UAAU,GAAG,MAAMC,IAAI,CAACC,GAAG,CAAC,CAAC,IAAIP,UAAU,EAAE;IAEnD,KAAK,IAAIQ,CAAC,GAAG,CAAC,EAAEC,SAAS,EAAEC,UAAU,EAAEF,CAAC,GAAGP,cAAc,CAACU,MAAM,EAAEH,CAAC,EAAE,EAAE;MACrE,MAAMI,UAAU,GAAGX,cAAc,CAACY,KAAK,CAACL,CAAC,CAAC,CAACM,IAAI,CAAC,GAAG,CAAC;;MAEpD;MACAf,OAAO,CAACgB,SAAS,CAACV,UAAU,EAAE,GAAG,EAAEW,SAAS,EAAEA,SAAS,EAAEJ,UAAU,CAAC;;MAEpE;MACAF,UAAU,GAAGX,OAAO,CAACkB,SAAS,CAACZ,UAAU,CAAC;;MAE1C;MACAN,OAAO,CAACgB,SAAS,CAACV,UAAU,EAAE,EAAE,EAAE,+BAA+B,EAAEW,SAAS,EAAEJ,UAAU,CAAC;MAEzF,IAAIF,UAAU,KAAK,GAAG,EAAE;QACtB;QACAD,SAAS,GAAGG,UAAU;MACxB,CAAC,MAAM;QACL;QACA,OAAOH,SAAS;MAClB;IACF;EACF,CAAC;AACH","sources":["webpack://prebid.js/../../libraries/domainOverrideToRootDomain/index.js"],"sourcesContent":["/**\n * Create a domainOverride callback for an ID module, closing over\n * an instance of StorageManager.\n *\n * The domainOverride function, given document.domain, will return\n * the topmost domain we are able to set a cookie on. For example,\n * given subdomain.example.com, it would return example.com.\n *\n * @param storage e.g. from getStorageManager()\n * @param {string} moduleName the name of the module using this function\n * @returns {function(): string}\n */\nexport function domainOverrideToRootDomain(storage, moduleName) {\n  return function() {\n    const domainElements = document.domain.split('.');\n    const cookieName = `_gd${Date.now()}_${moduleName}`;\n\n    for (let i = 0, topDomain, testCookie; i < domainElements.length; i++) {\n      const nextDomain = domainElements.slice(i).join('.');\n\n      // write test cookie\n      storage.setCookie(cookieName, '1', undefined, undefined, nextDomain);\n\n      // read test cookie to verify domain was valid\n      testCookie = storage.getCookie(cookieName);\n\n      // delete test cookie\n      storage.setCookie(cookieName, '', 'Thu, 01 Jan 1970 00:00:01 GMT', undefined, nextDomain);\n\n      if (testCookie === '1') {\n        // cookie was written successfully using test domain so the topDomain is updated\n        topDomain = nextDomain;\n      } else {\n        // cookie failed to write using test domain so exit by returning the topDomain\n        return topDomain;\n      }\n    }\n  }\n}\n"],"names":["domainOverrideToRootDomain","storage","moduleName","domainElements","document","domain","split","cookieName","Date","now","i","topDomain","testCookie","length","nextDomain","slice","join","setCookie","undefined","getCookie"],"sourceRoot":""}