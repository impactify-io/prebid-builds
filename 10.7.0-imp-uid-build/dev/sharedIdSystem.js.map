{"version":3,"file":"sharedIdSystem.js","mappings":"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","sources":["webpack://prebid.js/../../modules/sharedIdSystem.ts"],"sourcesContent":["/**\n * This module adds SharedId to the User ID module\n * The {@link module:modules/userId} module is required\n * @module modules/sharedIdSystem\n * @requires module:modules/userId\n */\n\nimport {parseUrl, buildUrl, triggerPixel, logInfo, hasDeviceAccess, generateUUID} from '../src/utils.js';\nimport {submodule} from '../src/hook.js';\nimport {getStorageManager} from '../src/storageManager.js';\nimport {VENDORLESS_GVLID} from '../src/consentHandler.js';\nimport {MODULE_TYPE_UID} from '../src/activities/modules.js';\nimport {domainOverrideToRootDomain} from '../libraries/domainOverrideToRootDomain/index.js';\n\nimport type {IdProviderSpec} from \"./userId/spec.ts\";\n\nexport const storage = getStorageManager({moduleType: MODULE_TYPE_UID, moduleName: 'sharedId'});\nconst COOKIE = 'cookie';\nconst LOCAL_STORAGE = 'html5';\nconst OPTOUT_NAME = '_pubcid_optout';\nconst PUB_COMMON_ID = 'PublisherCommonId';\n\ntype SharedIdParams = {\n  /**\n   * If true, then an id is created automatically if itâ€™s missing.\n   * Default is true. If your server has a component that generates the id instead, then this should be set to false\n   */\n  create?: boolean;\n  /**\n   * If true, the the expiration time is automatically extended whenever the script is executed even if the id exists already.\n   * Default is true. If false, then the id expires from the time it was initially created.\n   */\n  extend?: boolean;\n  /**\n   * For publisher server support only. Where to call out to for a server cookie.\n   */\n  pixelUrl?: string;\n  /**\n   * The value to use for `inserter` in EIDs.\n   */\n  inserter?: string;\n}\n\ndeclare module './userId/spec' {\n  interface UserId {\n    pubcid: string;\n  }\n  interface ProvidersToId {\n    sharedId: 'pubcid';\n    pubCommonId: 'pubcid';\n  }\n\n  interface ProviderParams {\n    sharedId: SharedIdParams;\n    pubCommonId: SharedIdParams;\n  }\n\n}\n\n/**\n * Read a value either from cookie or local storage\n * @param {string} name Name of the item\n * @param {string} type storage type override\n * @returns {string|null} a string if item exists\n */\nfunction readValue(name, type) {\n  if (type === COOKIE) {\n    return storage.getCookie(name);\n  } else if (type === LOCAL_STORAGE) {\n    if (storage.hasLocalStorage()) {\n      const expValue = storage.getDataFromLocalStorage(`${name}_exp`);\n      if (!expValue) {\n        return storage.getDataFromLocalStorage(name);\n      } else if ((new Date(expValue)).getTime() - Date.now() > 0) {\n        return storage.getDataFromLocalStorage(name)\n      }\n    }\n  }\n}\n\nfunction getIdCallback(pubcid, pixelUrl) {\n  return function (callback, getStoredId) {\n    if (pixelUrl) {\n      queuePixelCallback(pixelUrl, pubcid, () => {\n        callback(getStoredId() || pubcid);\n      })();\n    } else {\n      callback(pubcid);\n    }\n  }\n}\n\nfunction queuePixelCallback(pixelUrl, id = '', callback?) {\n  if (!pixelUrl) {\n    return;\n  }\n\n  // Use pubcid as a cache buster\n  const urlInfo = parseUrl(pixelUrl);\n  urlInfo.search.id = encodeURIComponent('pubcid:' + id);\n  const targetUrl = buildUrl(urlInfo);\n\n  return function () {\n    triggerPixel(targetUrl, callback);\n  };\n}\n\nfunction hasOptedOut() {\n  return !!((storage.cookiesAreEnabled() && readValue(OPTOUT_NAME, COOKIE)) ||\n    (storage.hasLocalStorage() && readValue(OPTOUT_NAME, LOCAL_STORAGE)));\n}\n\nexport const sharedIdSystemSubmodule: IdProviderSpec<'sharedId'> = {\n  /**\n   * used to link submodule with config\n   * @type {string}\n   */\n  name: 'sharedId',\n  aliasName: 'pubCommonId',\n  gvlid: VENDORLESS_GVLID as any,\n  disclosureURL: 'local://prebid/sharedId-optout.json',\n\n  /**\n   * decode the stored id value for passing to bid requests\n   */\n  decode(value, config) {\n    if (hasOptedOut()) {\n      logInfo('PubCommonId decode: Has opted-out');\n      return undefined;\n    }\n    logInfo(' Decoded value PubCommonId ' + value);\n    const idObj = {'pubcid': value as string};\n    return idObj;\n  },\n  getId: function (config = {} as any, consentData, storedId) {\n    if (hasOptedOut()) {\n      logInfo('PubCommonId: Has opted-out');\n      return;\n    }\n    if (consentData?.coppa) {\n      logInfo('PubCommonId: IDs not provided for coppa requests, exiting PubCommonId');\n      return;\n    }\n    const {params: {create = true, pixelUrl} = {}} = config;\n    let newId = storedId;\n    if (!newId) {\n      try {\n        if (typeof window[PUB_COMMON_ID] === 'object') {\n          // If the page includes its own pubcid module, then save a copy of id.\n          newId = window[PUB_COMMON_ID].getId();\n        }\n      } catch (e) {\n      }\n\n      if (!newId) newId = (create && hasDeviceAccess()) ? generateUUID() : undefined;\n    }\n\n    return {id: newId, callback: getIdCallback(newId, pixelUrl)};\n  },\n  /**\n   * performs action to extend an id.  There are generally two ways to extend the expiration time\n   * of stored id: using pixelUrl or return the id and let main user id module write it again with\n   * the new expiration time.\n   *\n   * PixelUrl, if defined, should point back to a first party domain endpoint.  On the server\n   * side, there is either a plugin, or customized logic to read and write back the pubcid cookie.\n   * The extendId function itself should return only the callback, and not the id itself to avoid\n   * having the script-side overwriting server-side.  This applies to both pubcid and sharedid.\n   *\n   * On the other hand, if there is no pixelUrl, then the extendId should return storedId so that\n   * its expiration time is updated.\n   */\n  extendId: function(config = {} as any, consentData, storedId) {\n    if (hasOptedOut()) {\n      logInfo('PubCommonId: Has opted-out');\n      return {id: undefined};\n    }\n    if (consentData?.coppa) {\n      logInfo('PubCommonId: IDs not provided for coppa requests, exiting PubCommonId');\n      return;\n    }\n    const {params: {extend = false, pixelUrl} = {}} = config;\n\n    if (extend) {\n      if (pixelUrl) {\n        const callback = queuePixelCallback(pixelUrl, storedId as string);\n        return {callback: callback};\n      } else {\n        return {id: storedId};\n      }\n    }\n  },\n  domainOverride: domainOverrideToRootDomain(storage, 'sharedId'),\n  eids: {\n    'pubcid'(values, config) {\n      const eid: any = {\n        source: 'pubcid.org',\n        uids: values.map(id => ({id, atype: 1}))\n      }\n      if (config?.params?.inserter != null) {\n        eid.inserter = config.params.inserter;\n      }\n      return eid;\n    },\n  }\n};\n\nsubmodule('userId', sharedIdSystemSubmodule);\n"],"names":["registerModule","__r0","parseUrl","buildUrl","triggerPixel","logInfo","hasDeviceAccess","generateUUID","submodule","getStorageManager","VENDORLESS_GVLID","MODULE_TYPE_UID","domainOverrideToRootDomain","storage","moduleType","moduleName","COOKIE","LOCAL_STORAGE","OPTOUT_NAME","PUB_COMMON_ID","readValue","name","type","getCookie","hasLocalStorage","expValue","getDataFromLocalStorage","Date","getTime","now","getIdCallback","pubcid","pixelUrl","callback","getStoredId","queuePixelCallback","id","arguments","length","undefined","urlInfo","search","encodeURIComponent","targetUrl","hasOptedOut","cookiesAreEnabled","sharedIdSystemSubmodule","aliasName","gvlid","disclosureURL","decode","value","config","idObj","getId","consentData","storedId","coppa","params","create","newId","window","e","extendId","extend","domainOverride","eids","values","eid","source","uids","map","atype","inserter"],"sourceRoot":""}