{"version":3,"file":"mspa.js","mappings":"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","sources":["webpack://prebid.js/../../libraries/mspa/activityControls.js"],"sourcesContent":["import {registerActivityControl} from '../../src/activities/rules.js';\nimport {\n  ACTIVITY_ENRICH_EIDS,\n  ACTIVITY_ENRICH_UFPD,\n  ACTIVITY_SYNC_USER,\n  ACTIVITY_TRANSMIT_PRECISE_GEO\n} from '../../src/activities/activities.js';\nimport {gppDataHandler} from '../../src/adapterManager.js';\nimport {logInfo} from '../../src/utils.js';\n\n// default interpretation for MSPA consent(s):\n// https://docs.prebid.org/features/mspa-usnat.html\n\nconst SENSITIVE_DATA_GEO = 7;\n\nfunction isApplicable(val) {\n  return val != null && val !== 0\n}\n\nexport function isBasicConsentDenied(cd) {\n  // service provider mode is always consent denied\n  return ['MspaServiceProviderMode', 'Gpc'].some(prop => cd[prop] === 1) ||\n    // you cannot consent to what you were not notified of\n    cd.PersonalDataConsents === 2 ||\n    // minors 13+ who have not given consent\n    cd.KnownChildSensitiveDataConsents[0] === 1 ||\n    // minors 16+ who have not given consent (added in usnat version 2)\n    cd.KnownChildSensitiveDataConsents[2] === 1 ||\n    // minors under 13 cannot consent\n    isApplicable(cd.KnownChildSensitiveDataConsents[1]) ||\n    // covered cannot be zero\n    cd.MspaCoveredTransaction === 0;\n}\n\nexport function sensitiveNoticeIs(cd, value) {\n  return ['SensitiveDataProcessingOptOutNotice', 'SensitiveDataLimitUseNotice'].some(prop => cd[prop] === value)\n}\n\nexport function isConsentDenied(cd) {\n  return isBasicConsentDenied(cd) ||\n    ['Sale', 'Sharing', 'TargetedAdvertising'].some(scope => {\n      const oo = cd[`${scope}OptOut`];\n      const notice = cd[`${scope}OptOutNotice`];\n      // user opted out\n      return oo === 1 ||\n      // opt-out notice was not given\n        notice === 2 ||\n      // do not trust CMP if it signals opt-in but no opt-out notice was given\n        (oo === 2 && notice === 0);\n    }) ||\n    // no sharing notice was given ...\n    cd.SharingNotice === 2 ||\n    // ... or the CMP says it was not applicable, while also claiming it got consent\n    (cd.SharingOptOut === 2 && cd.SharingNotice === 0);\n}\n\nexport const isTransmitUfpdConsentDenied = (() => {\n  const sensitiveFlags = (() => {\n    // deny anything that smells like: genetic, biometric, state/national ID, financial, union membership,\n    // personal communication data, status as victim of crime (version 2), status as transgender/nonbinary (version 2)\n    const cannotBeInScope = [6, 7, 9, 10, 12, 14, 16].map(el => --el);\n    // require consent for everything else (except geo, which is treated separately)\n    const allExceptGeo = Array.from(Array(16).keys()).filter((el) => el !== SENSITIVE_DATA_GEO)\n    const mustHaveConsent = allExceptGeo.filter(el => !cannotBeInScope.includes(el));\n\n    return Object.fromEntries(\n      Object.entries({\n        1: 12,\n        2: 16\n      }).map(([version, cardinality]) => {\n        const isInVersion = (el) => el < cardinality\n        return [version, {\n          cannotBeInScope: cannotBeInScope.filter(isInVersion),\n          allExceptGeo: allExceptGeo.filter(isInVersion),\n          mustHaveConsent: mustHaveConsent.filter(isInVersion)\n        }]\n      })\n    )\n  })()\n\n  return function (cd) {\n    const {cannotBeInScope, mustHaveConsent, allExceptGeo} = sensitiveFlags[cd.Version];\n    return isConsentDenied(cd) ||\n      // no notice about sensitive data was given\n      sensitiveNoticeIs(cd, 2) ||\n      // extra-sensitive data is applicable\n      cannotBeInScope.some(i => isApplicable(cd.SensitiveDataProcessing[i])) ||\n      // user opted out for not-as-sensitive data\n      mustHaveConsent.some(i => cd.SensitiveDataProcessing[i] === 1) ||\n      // CMP says it has consent, but did not give notice about it\n      (sensitiveNoticeIs(cd, 0) && allExceptGeo.some(i => cd.SensitiveDataProcessing[i] === 2))\n  }\n})();\n\nexport function isTransmitGeoConsentDenied(cd) {\n  const geoConsent = cd.SensitiveDataProcessing[SENSITIVE_DATA_GEO];\n  return geoConsent === 1 ||\n    isBasicConsentDenied(cd) ||\n    // no sensitive data notice was given\n    sensitiveNoticeIs(cd, 2) ||\n    // do not trust CMP if it says it has consent for geo but didn't show a sensitive data notice\n    (sensitiveNoticeIs(cd, 0) && geoConsent === 2)\n}\n\nconst CONSENT_RULES = {\n  [ACTIVITY_SYNC_USER]: isConsentDenied,\n  [ACTIVITY_ENRICH_EIDS]: isConsentDenied,\n  [ACTIVITY_ENRICH_UFPD]: isTransmitUfpdConsentDenied,\n  [ACTIVITY_TRANSMIT_PRECISE_GEO]: isTransmitGeoConsentDenied\n};\n\nexport function mspaRule(sids, getConsent, denies, applicableSids = () => gppDataHandler.getConsentData()?.applicableSections) {\n  return function () {\n    if (applicableSids().some(sid => sids.includes(sid))) {\n      const consent = getConsent();\n      if (consent == null) {\n        return {allow: false, reason: 'consent data not available'};\n      }\n      if (![1, 2].includes(consent.Version)) {\n        return {allow: false, reason: `unsupported consent specification version \"${consent.Version}\"`}\n      }\n      if (denies(consent)) {\n        return {allow: false};\n      }\n    }\n  };\n}\n\nfunction flatSection(subsections) {\n  if (!Array.isArray(subsections)) return subsections;\n  return subsections.reduceRight((subsection, consent) => {\n    return Object.assign(consent, subsection);\n  }, {});\n}\n\nexport function setupRules(api, sids, normalizeConsent = (c) => c, rules = CONSENT_RULES, registerRule = registerActivityControl, getConsentData = () => gppDataHandler.getConsentData()) {\n  const unreg = [];\n  const ruleName = `MSPA (GPP '${api}' for section${sids.length > 1 ? 's' : ''} ${sids.join(', ')})`;\n  logInfo(`Enabling activity controls for ${ruleName}`)\n  Object.entries(rules).forEach(([activity, denies]) => {\n    unreg.push(registerRule(activity, ruleName, mspaRule(\n      sids,\n      () => normalizeConsent(flatSection(getConsentData()?.parsedSections?.[api])),\n      denies,\n      () => getConsentData()?.applicableSections || []\n    )));\n  });\n  return () => unreg.forEach(ur => ur());\n}\n"],"names":["registerActivityControl","ACTIVITY_ENRICH_EIDS","ACTIVITY_ENRICH_UFPD","ACTIVITY_SYNC_USER","ACTIVITY_TRANSMIT_PRECISE_GEO","gppDataHandler","logInfo","SENSITIVE_DATA_GEO","isApplicable","val","isBasicConsentDenied","cd","some","prop","PersonalDataConsents","KnownChildSensitiveDataConsents","MspaCoveredTransaction","sensitiveNoticeIs","value","isConsentDenied","scope","oo","notice","SharingNotice","SharingOptOut","isTransmitUfpdConsentDenied","sensitiveFlags","cannotBeInScope","map","el","allExceptGeo","Array","from","keys","filter","mustHaveConsent","includes","Object","fromEntries","entries","_ref","version","cardinality","isInVersion","Version","i","SensitiveDataProcessing","isTransmitGeoConsentDenied","geoConsent","CONSENT_RULES","mspaRule","sids","getConsent","denies","applicableSids","arguments","length","undefined","getConsentData","applicableSections","sid","consent","allow","reason","flatSection","subsections","isArray","reduceRight","subsection","assign","setupRules","api","normalizeConsent","c","rules","registerRule","unreg","ruleName","join","forEach","_ref2","activity","push","parsedSections","ur"],"sourceRoot":""}