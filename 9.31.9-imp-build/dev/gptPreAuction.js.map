{"version":3,"file":"gptPreAuction.js","mappings":"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","sources":["webpack://prebid.js/./modules/gptPreAuction.js"],"sourcesContent":["import { getSignals as getSignalsFn, getSegments as getSegmentsFn, taxonomies } from '../libraries/gptUtils/gptUtils.js';\nimport { auctionManager } from '../src/auctionManager.js';\nimport { config } from '../src/config.js';\nimport { TARGETING_KEYS } from '../src/constants.js';\nimport { getHook } from '../src/hook.js';\nimport { find } from '../src/polyfill.js';\nimport {\n  deepAccess,\n  deepSetValue,\n  isAdUnitCodeMatchingSlot,\n  isGptPubadsDefined,\n  logInfo,\n  logWarn,\n  pick,\n  uniques\n} from '../src/utils.js';\n\nconst MODULE_NAME = 'GPT Pre-Auction';\nexport let _currentConfig = {};\nlet hooksAdded = false;\n\nexport function getSegments(fpd, sections, segtax) {\n  return getSegmentsFn(fpd, sections, segtax);\n}\n\nexport function getSignals(fpd) {\n  return getSignalsFn(fpd);\n}\n\nexport function getSignalsArrayByAuctionsIds(auctionIds, index = auctionManager.index) {\n  const signals = auctionIds\n    .map(auctionId => index.getAuction({ auctionId })?.getFPD()?.global)\n    .map(getSignals)\n    .filter(fpd => fpd);\n\n  return signals;\n}\n\nexport function getSignalsIntersection(signals) {\n  const result = {};\n  taxonomies.forEach((taxonomy) => {\n    const allValues = signals\n      .flatMap(x => x)\n      .filter(x => x.taxonomy === taxonomy)\n      .map(x => x.values);\n    result[taxonomy] = allValues.length ? (\n      allValues.reduce((commonElements, subArray) => {\n        return commonElements.filter(element => subArray.includes(element));\n      })\n    ) : []\n    result[taxonomy] = { values: result[taxonomy] };\n  })\n  return result;\n}\n\nexport function getAuctionsIdsFromTargeting(targeting, am = auctionManager) {\n  return Object.values(targeting)\n    .flatMap(x => Object.entries(x))\n    .filter((entry) => entry[0] === TARGETING_KEYS.AD_ID || entry[0].startsWith(TARGETING_KEYS.AD_ID + '_'))\n    .flatMap(entry => entry[1])\n    .map(adId => am.findBidByAdId(adId)?.auctionId)\n    .filter(id => id != null)\n    .filter(uniques);\n}\n\nexport const appendGptSlots = adUnits => {\n  const { customGptSlotMatching } = _currentConfig;\n\n  if (!isGptPubadsDefined()) {\n    return;\n  }\n\n  const adUnitMap = adUnits.reduce((acc, adUnit) => {\n    acc[adUnit.code] = acc[adUnit.code] || [];\n    acc[adUnit.code].push(adUnit);\n    return acc;\n  }, {});\n\n  const adUnitPaths = {};\n\n  window.googletag.pubads().getSlots().forEach(slot => {\n    const matchingAdUnitCode = find(Object.keys(adUnitMap), customGptSlotMatching\n      ? customGptSlotMatching(slot)\n      : isAdUnitCodeMatchingSlot(slot));\n\n    if (matchingAdUnitCode) {\n      const path = adUnitPaths[matchingAdUnitCode] = slot.getAdUnitPath();\n      const adserver = {\n        name: 'gam',\n        adslot: sanitizeSlotPath(path)\n      };\n      adUnitMap[matchingAdUnitCode].forEach((adUnit) => {\n        deepSetValue(adUnit, 'ortb2Imp.ext.data.adserver', Object.assign({}, adUnit.ortb2Imp?.ext?.data?.adserver, adserver));\n      });\n    }\n  });\n  return adUnitPaths;\n};\n\nconst sanitizeSlotPath = (path) => {\n  const gptConfig = config.getConfig('gptPreAuction') || {};\n\n  if (gptConfig.mcmEnabled) {\n    return path.replace(/(^\\/\\d*),\\d*\\//, '$1/');\n  }\n\n  return path;\n}\n\nconst defaultPreAuction = (adUnit, adServerAdSlot, adUnitPath) => {\n  const context = adUnit.ortb2Imp.ext.data;\n\n  // use pbadslot if supplied\n  if (context.pbadslot) {\n    return context.pbadslot;\n  }\n\n  // confirm that GPT is set up\n  if (!isGptPubadsDefined()) {\n    return;\n  }\n\n  // find all GPT slots with this name\n  var gptSlots = window.googletag.pubads().getSlots().filter(slot => slot.getAdUnitPath() === adUnitPath);\n\n  if (gptSlots.length === 0) {\n    return; // should never happen\n  }\n\n  if (gptSlots.length === 1) {\n    return adServerAdSlot;\n  }\n\n  // else the adunit code must be div id. append it.\n  return `${adServerAdSlot}#${adUnit.code}`;\n}\n\nexport const appendPbAdSlot = adUnit => {\n  const context = adUnit.ortb2Imp.ext.data;\n  const { customPbAdSlot } = _currentConfig;\n\n  // use context.pbAdSlot if set (if someone set it already, it will take precedence over others)\n  if (context.pbadslot) {\n    return;\n  }\n\n  if (customPbAdSlot) {\n    context.pbadslot = customPbAdSlot(adUnit.code, deepAccess(context, 'adserver.adslot'));\n    return;\n  }\n\n  // use data attribute 'data-adslotid' if set\n  try {\n    const adUnitCodeDiv = document.getElementById(adUnit.code);\n    if (adUnitCodeDiv.dataset.adslotid) {\n      context.pbadslot = adUnitCodeDiv.dataset.adslotid;\n      return;\n    }\n  } catch (e) {}\n  // banner adUnit, use GPT adunit if defined\n  if (deepAccess(context, 'adserver.adslot')) {\n    context.pbadslot = context.adserver.adslot;\n    return;\n  }\n  context.pbadslot = adUnit.code;\n  return true;\n};\n\nfunction warnDeprecation(adUnit) {\n  logWarn(`pbadslot is deprecated and will soon be removed, use gpid instead`, adUnit)\n}\n\nexport const makeBidRequestsHook = (fn, adUnits, ...args) => {\n  const adUnitPaths = appendGptSlots(adUnits);\n  const { useDefaultPreAuction, customPreAuction } = _currentConfig;\n  adUnits.forEach(adUnit => {\n    // init the ortb2Imp if not done yet\n    adUnit.ortb2Imp = adUnit.ortb2Imp || {};\n    adUnit.ortb2Imp.ext = adUnit.ortb2Imp.ext || {};\n    adUnit.ortb2Imp.ext.data = adUnit.ortb2Imp.ext.data || {};\n    const context = adUnit.ortb2Imp.ext;\n    // if neither new confs set do old stuff\n    if (!customPreAuction && !useDefaultPreAuction) {\n      warnDeprecation(adUnit);\n      const usedAdUnitCode = appendPbAdSlot(adUnit);\n      // gpid should be set to itself if already set, or to what pbadslot was (as long as it was not adUnit code)\n      if (!context.gpid && !usedAdUnitCode) {\n        context.gpid = context.data.pbadslot;\n      }\n    } else {\n      if (context.data?.pbadslot) {\n        warnDeprecation(adUnit);\n      }\n      let adserverSlot = deepAccess(context, 'data.adserver.adslot');\n      let result;\n      if (customPreAuction) {\n        result = customPreAuction(adUnit, adserverSlot, adUnitPaths?.[adUnit.code]);\n      } else if (useDefaultPreAuction) {\n        result = defaultPreAuction(adUnit, adserverSlot, adUnitPaths?.[adUnit.code]);\n      }\n      if (result) {\n        context.gpid = context.data.pbadslot = result;\n      }\n    }\n  });\n  return fn.call(this, adUnits, ...args);\n};\n\nconst setPpsConfigFromTargetingSet = (next, targetingSet) => {\n  // set gpt config\n  const auctionsIds = getAuctionsIdsFromTargeting(targetingSet);\n  const signals = getSignalsIntersection(getSignalsArrayByAuctionsIds(auctionsIds));\n  window.googletag.setConfig && window.googletag.setConfig({pps: { taxonomies: signals }});\n  next(targetingSet);\n};\n\nconst handleSetGptConfig = moduleConfig => {\n  _currentConfig = pick(moduleConfig, [\n    'enabled', enabled => enabled !== false,\n    'customGptSlotMatching', customGptSlotMatching =>\n      typeof customGptSlotMatching === 'function' && customGptSlotMatching,\n    'customPbAdSlot', customPbAdSlot => typeof customPbAdSlot === 'function' && customPbAdSlot,\n    'customPreAuction', customPreAuction => typeof customPreAuction === 'function' && customPreAuction,\n    'useDefaultPreAuction', useDefaultPreAuction => useDefaultPreAuction ?? true,\n  ]);\n\n  if (_currentConfig.enabled) {\n    if (!hooksAdded) {\n      getHook('makeBidRequests').before(makeBidRequestsHook);\n      getHook('targetingDone').after(setPpsConfigFromTargetingSet)\n      hooksAdded = true;\n    }\n  } else {\n    logInfo(`${MODULE_NAME}: Turning off module`);\n    _currentConfig = {};\n    getHook('makeBidRequests').getHooks({hook: makeBidRequestsHook}).remove();\n    getHook('targetingDone').getHooks({hook: setPpsConfigFromTargetingSet}).remove();\n    hooksAdded = false;\n  }\n};\n\nconfig.getConfig('gptPreAuction', config => handleSetGptConfig(config.gptPreAuction));\nhandleSetGptConfig({});\n"],"names":["registerModule","__r0","getSignals","getSignalsFn","getSegments","getSegmentsFn","taxonomies","auctionManager","config","TARGETING_KEYS","getHook","find","deepAccess","deepSetValue","isAdUnitCodeMatchingSlot","isGptPubadsDefined","logInfo","logWarn","pick","uniques","MODULE_NAME","_currentConfig","hooksAdded","fpd","sections","segtax","getSignalsArrayByAuctionsIds","auctionIds","index","arguments","length","undefined","signals","map","auctionId","getAuction","getFPD","global","filter","getSignalsIntersection","result","forEach","taxonomy","allValues","flatMap","x","values","reduce","commonElements","subArray","element","includes","getAuctionsIdsFromTargeting","targeting","am","Object","entries","entry","AD_ID","startsWith","adId","findBidByAdId","id","appendGptSlots","adUnits","customGptSlotMatching","adUnitMap","acc","adUnit","code","push","adUnitPaths","window","googletag","pubads","getSlots","slot","matchingAdUnitCode","keys","path","getAdUnitPath","adserver","name","adslot","sanitizeSlotPath","assign","ortb2Imp","ext","data","gptConfig","getConfig","mcmEnabled","replace","defaultPreAuction","adServerAdSlot","adUnitPath","context","pbadslot","gptSlots","appendPbAdSlot","customPbAdSlot","adUnitCodeDiv","document","getElementById","dataset","adslotid","e","warnDeprecation","makeBidRequestsHook","fn","useDefaultPreAuction","customPreAuction","usedAdUnitCode","gpid","adserverSlot","_len","args","Array","_key","call","_this","setPpsConfigFromTargetingSet","next","targetingSet","auctionsIds","setConfig","pps","handleSetGptConfig","moduleConfig","enabled","before","after","getHooks","hook","remove","gptPreAuction"],"sourceRoot":""}